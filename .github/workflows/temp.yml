name: TDR Tag and pre deploy
on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
    secrets:
      MANAGEMENT_ACCOUNT:
        required: true
      WORKFLOW_PAT:
        required: true

permissions:
  id-token: write
  contents: write
jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    environment: intg
    steps:
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1
      - uses: coursier/cache-action@v6
      - name: Configure AWS credentials from management account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubActionsRoleMgmt
          aws-region: eu-west-2
          role-session-name: APIDownloadDependencies
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com
      - uses: MancunianSam/github-actions/increment-version@main
        id: increment
        with:
          repo_name: tdr-${{ inputs.repo_name }}
      - name: Build new image version
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        run: |
          MANAGEMENT_ACCOUNT=${{ secrets.MANAGEMENT_ACCOUNT }} sbt assembly
          docker build -t ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.repo_name }}:${{ steps.increment.outputs.next_version }} .
          docker push ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.repo_name }}:${{ steps.increment.outputs.next_version }}
          git tag ${{ steps.increment.outputs.next_version }}
          git push origin ${{ steps.increment.outputs.next_version }}
      - name: Deploy to integration
        run: gh workflow run deploy.yml -f environment=intg -f toDeploy=${{ steps.increment.outputs.next_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
