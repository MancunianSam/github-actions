name: End to end tests
on:
  workflow_call:
    inputs:
      browser:
        description: 'The browser used to run the tests'
        type: string
        required: false
        default: 'Firefox'
      environment:
        description: 'Environment'
        type: string
        required: false
        default: 'intg'
    secrets:
      ACCOUNT_NUMBER:
        required: true
      MANAGEMENT_ACCOUNT:
        required: true
      USER_ADMIN_SECRET:
        required: true
      BACKEND_CHECKS_SECRET:
        required: true

permissions:
  id-token: write
  contents: read
concurrency: env.ENVIRONMENT
jobs:
  setup-e2e-tests:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      files: ${{ steps.generate-files.outputs.files }}
      environment: ${{ github.event.inputs.environment }}
      driver: ${{ steps.get-driver.outputs.driver }}
      role-name: ${{ steps.get-role-name.outputs.role-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: nationalarchives/tdr-e2e-tests
      - id: get-driver
        run:  |
              driver = "gecko" if "${{ inputs.driver }}" == "Firefox" else "chrome"  
              print(f"::set-output name=driver::/usr/local/share/{driver}_driver/{driver}driver")
        shell: python
      - id: get-role-name
        run: |
          title_env = "${{ inputs }}".title()
          print f"::set-output name=role-name::TDRUpdateWAFAndSecurityGroupsRole{title_env}"
        shell: python
      - name: Set feature file names
        id: generate-files
        run: |
          FILES=$(ls src/test/resources/features/ | jq -R -s -c 'split("\n")[:-1]')
          echo ::set-output name=files::${FILES}
  run-e2e-tests:
    runs-on: ubuntu-latest
    environment: ${{ needs.setup-e2e-tests.outputs.environment }}
    needs:
      - setup-e2e-tests
    strategy:
      matrix:
        file: ${{ fromJSON(needs.setup-e2e-tests.outputs.files) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: coursier/cache-action@v6
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ needs.setup-e2e-tests.outputs.role-name }}
          aws-region: eu-west-2
          role-session-name: UpdateWAF
      - name: Update security group
        run: .github/scripts/update-security-group.sh INSERT ${{ secrets.ACCOUNT_NUMBER }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubActionsE2ETestsMgmt
          aws-region: eu-west-2
          role-session-name: E2ETests
      - name: Run Tests
        env:
          DRIVER_LOCATION: ${{ needs.setup-e2e-tests.outputs.driver }}
        run: sbt test -Daccount.number=${{ secrets.ACCOUNT_NUMBER }} -Dconfig.file=./src/test/resources/application.${{ needs.setup-e2e-tests.outputs.environment }}.conf -Dkeycloak.user.admin.secret=${{ secrets.USER_ADMIN_SECRET }} -Dkeycloak.backendchecks.secret=${{ secrets.BACKEND_CHECKS_SECRET }} -Dbrowser=firefox -Dcucumber.features=./src/test/resources/features/${{ matrix.file }}
      - name: Configure AWS credentials
        if: ${{ always() }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/${{ needs.setup-e2e-tests.outputs.role-name }}
          aws-region: eu-west-2
          role-session-name: UpdateWAF
      - name: Remove access
        if: ${{ always() }}
        run: .github/scripts/update-security-group.sh DELETE ${{ secrets.ACCOUNT_NUMBER }}
